{
  "hash": "bad6cc2525889f90c2b25b7310091531",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"How to deal with darkness: Modelling and visualization of zero-inflated personal light exposure data on a logarithmic scale\"\nsubtitle: \"Supplemental Material S1\"\nauthor: Johannes Zauner, Carolina Guidolin, Manuel Spitschan\nformat:\n  html:\n    toc: true\n    toc-location: left\n    lightbox: true\n    code-tools: true\n\n---\n\n\n\n\n## Preface\n\nthis document contains the analysis documentation for the article **How to deal with darkness: Modelling and visualization of zero-inflated personal light exposure data on a logarithmic scale**.\n\nA preprint of the publication is available at [bioRxiv](https://doi.org/10.1101/2024.12.30.630669). This page will be updated with a link and DOI to the main publication in the **Journal of Biological Rhythms** upon release.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"devtools\")\n# devtools::install_github(\"tscnlab/LightLogR\")\n\nlibrary(LightLogR)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(mgcv)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: nlme\n\nAttaching package: 'nlme'\n\nThe following object is masked from 'package:dplyr':\n\n    collapse\n\nThis is mgcv 1.9-1. For overview type 'help(\"mgcv-package\")'.\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(patchwork)\nlibrary(gt)\nlibrary(itsadug)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: plotfunctions\n\nAttaching package: 'plotfunctions'\n\nThe following object is masked from 'package:ggplot2':\n\n    alpha\n\nLoaded package itsadug 2.4 (see 'help(\"itsadug\")' ).\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggsci)\nlibrary(cowplot)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'cowplot'\n\nThe following object is masked from 'package:gt':\n\n    as_gtable\n\nThe following object is masked from 'package:patchwork':\n\n    align_plots\n\nThe following object is masked from 'package:lubridate':\n\n    stamp\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tweedie)\nlibrary(ggforce)\n```\n:::\n\n\n\n\n## Baseline Data and visualization\n\nIn this section, we will copy relevant portions of a tutorial from LightLogR [The whole game](https://tscnlab.github.io/LightLogR/articles/Day.html) which will be the basis for both visualizations and analysis.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npath <- system.file(\"extdata\", \n              package = \"LightLogR\")\n\nfile.LL <- \"205_actlumus_Log_1020_20230904101707532.txt.zip\"\nfile.env <- \"cyepiamb_CW35_Log_1431_20230904081953614.txt.zip\"\ntz <- \"Europe/Berlin\"\ndataset.LL <- import$ActLumus(file.LL, path, auto.id = \"^(\\\\d{3})\", tz = tz)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nSuccessfully read in 61'016 observations across 1 Ids from 1 ActLumus-file(s).\nTimezone set is Europe/Berlin.\n\nFirst Observation: 2023-08-28 08:47:54\nLast Observation: 2023-09-04 10:17:04\nTimespan: 7.1 days\n\nObservation intervals: \n  Id    interval.time     n pct  \n1 205   10s           61015 100% \n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\ndataset.env <- import$ActLumus(file.env, path, manual.id = \"CW35\", tz = tz)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nSuccessfully read in 20'143 observations across 1 Ids from 1 ActLumus-file(s).\nTimezone set is Europe/Berlin.\n\nFirst Observation: 2023-08-28 08:28:39\nLast Observation: 2023-09-04 08:19:38\nTimespan: 7 days\n\nObservation intervals: \n  Id    interval.time     n pct  \n1 CW35  29s               1 0%   \n2 CW35  30s           20141 100% \n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n```{.r .cell-code}\ndataset.LL <- \n  dataset.LL %>% data2reference(Reference.data = dataset.env, across.id = TRUE)\ndataset.LL <- \n  dataset.LL %>% select(Id, Datetime, MEDI, Reference)\ndataset.LL.partial <- \ndataset.LL %>% #dataset\n  filter_Date(start = \"2023-09-01\", length = days(1)) %>% \n  aggregate_Datetime(unit = \"5 mins\")\n```\n:::\n\n\n\n\n## Visualizations\n\n### Pattern\n\n#### Setup\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nday_ribbon <- \n  geom_ribbon(aes(ymin = MEDI, ymax=Reference), \n              alpha = 0.25, fill = \"#0073C2FF\",\n              outline.type = \"upper\", col = \"#0073C2FF\", size = 0.15)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n```{.r .cell-code}\nparticipant_ribbon <- \n  geom_ribbon(aes(ymin = 0, ymax = MEDI), alpha = 0.30, fill = \"#EFC000\", \n              outline.type = \"upper\", col = \"#EFC000\", size = 0.4)\n\nlower_bound <- \n geom_hline(yintercept = 1, col = \"red\", lty = 3)\nupper_bound <- \n geom_hline(yintercept = 10^5, col = \"red\", lty = 3)\ntime_scale <- \n  scale_x_time(breaks = c(0, 6, 12, 18, 24)*3600, labels = \n               scales::label_time(format = \"%H:%M\"), \n      expand = c(0, 0), limits = c(0, 24 * 3600))\n```\n:::\n\n\n\n\n\n#### Visualization A\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nPlot_A <- \ndataset.LL.partial %>% \n   gg_day(facetting = FALSE, geom = \"blank\", y.scale = \"identity\",\n          x.axis.label = \"Local Time (HH:MM)\",\n          y.axis.breaks = seq(0, to = 10^5, by = 10^4), \n          y.axis.label = \"Melanopic illuminance (lx, mel EDI)\") + #base plot\n  day_ribbon + participant_ribbon +\n lower_bound + upper_bound + time_scale\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nScale for x is already present.\nAdding another scale for x, which will replace the existing scale.\n```\n\n\n:::\n\n```{.r .cell-code}\nPlot_A\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/vis A-1.png){width=672}\n:::\n:::\n\n\n\n\n\n#### Visualization B\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nPlot_B <- \ndataset.LL.partial %>% \n   gg_day(facetting = FALSE, geom = \"blank\",\n                    x.axis.label = \"Local Time (HH:MM)\",\n          y.axis.label = \"Melanopic illuminance (lx, mel EDI)\"\n          ) + #base plot\n  scale_y_log10(breaks = 10^(-5:5), labels = \\(x) label_parsed(paste0(\"10^\",log10(x)))) +\n  day_ribbon + participant_ribbon +\n lower_bound + upper_bound + time_scale\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\nScale for x is already present.\nAdding another scale for x, which will replace the existing scale.\n```\n\n\n:::\n\n```{.r .cell-code}\nPlot_B\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in scale_y_log10(breaks = 10^(-5:5), labels = function(x) label_parsed(paste0(\"10^\", : log-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/vis B-1.png){width=672}\n:::\n:::\n\n\n\n\n#### Visualization C\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nPlot_C <-\ndataset.LL.partial %>% \n  mutate(MEDI = case_when(MEDI == 0 ~ NA,\n                          .default = MEDI),\n         Reference = case_when(Reference == 0 ~ NA,\n                               .default = Reference)) %>% \n   gg_day(facetting = FALSE, geom = \"blank\", \n                    x.axis.label = \"Local Time (HH:MM)\",\n          y.axis.label = \"Melanopic illuminance (lx, mel EDI)\"\n          ) + #base plot\n    geom_ribbon(\n      aes(ymin = \n            ifelse(is.na(MEDI) | MEDI < min(Reference, na.rm = TRUE), \n                   min(Reference, na.rm = TRUE), MEDI), \n          ymax=Reference), \n              alpha = 0.25, fill = \"#0073C2FF\",\n              outline.type = \"upper\", col = \"#0073C2FF\", size = 0.15) + #solar reference\n  geom_ribbon(aes(ymin = min(MEDI, na.rm = TRUE), ymax = MEDI), alpha = 0.30, \n              fill = \"#EFC000\",\n              outline.type = \"upper\", col = \"#EFC000\", size = 0.4) +\n  geom_point(\n    data = \\(x) x %>% filter(is.na(Reference)) %>% mutate(Reference = 10^-4), \n    aes(y = Reference), col = \"#0073C2FF\", size = 1, alpha = 0.25) +\n  geom_point(data = \\(x) x %>% filter(is.na(MEDI)) %>% mutate(MEDI = 10^-4), \n              col = \"#EFC000\", size = 1, alpha = 0.25, position = position_nudge(y=0.05)) +\n  scale_y_log10(breaks = 10^(-5:5), \n                labels = \\(x) label_parsed(ifelse(x == 10^-4, \"0\", paste0(\"10^\",log10(x))))\n                ) +\n lower_bound + upper_bound + time_scale\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\nScale for x is already present.\nAdding another scale for x, which will replace the existing scale.\n```\n\n\n:::\n\n```{.r .cell-code}\nPlot_C\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/vis C-1.png){width=672}\n:::\n:::\n\n\n\n\n#### Visualization D\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nPlot_D <-\ndataset.LL.partial %>% \n   gg_day(facetting = FALSE, geom = \"blank\", \n                    x.axis.label = \"Local Time (HH:MM)\",\n          y.axis.label = \"Melanopic illuminance (lx, mel EDI)\") + #base plot\n day_ribbon + participant_ribbon +\n lower_bound + upper_bound + time_scale \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nScale for x is already present.\nAdding another scale for x, which will replace the existing scale.\n```\n\n\n:::\n\n```{.r .cell-code}\nPlot_D\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/vis D-1.png){width=672}\n:::\n:::\n\n\n\n\n#### Combined Visualization\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nPattern <-\nPlot_A + plot_spacer() + Plot_B + plot_spacer() + Plot_C + plot_spacer() + Plot_D + \n  plot_layout(ncol = 7, nrow = 1, axes = \"collect\",\n              widths = c(1,-0.15,1,-0.15,1,-0.15,1)) + \n  plot_annotation(tag_levels = \"A\") & \n  theme(\n    plot.tag.position = c(0, 1),\n        plot.tag.location = \"plot\",\n        plot.tag = element_text(size = 15, hjust = 0.5, vjust =-0.75),\n        axis.text = element_text(size = 13),\n        axis.title = element_text(size = 16)\n        ) +\n  theme(plot.margin = margin(15,10,5,5))\n\nggsave(\"figures/Figure_2.pdf\", Pattern, width = 17.5, height = 5.5, units = \"cm\", scale = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in scale_y_log10(breaks = 10^(-5:5), labels = function(x) label_parsed(paste0(\"10^\", : log-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\n```\n\n\n:::\n:::\n\n\n\n\n### Differences\n\n#### Visualization E\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nPlot_E <-\ndataset.LL.partial %>% \n   gg_day(y.axis = Reference - MEDI, facetting = FALSE, geom = \"blank\", \n                    x.axis.label = \"Local Time (HH:MM)\", y.scale = \"identity\",\n          y.axis.breaks = seq(-10^4, to = 10^5, by = 10^4),\n          y.axis.label = \"Daylight - Participant (lx, mel EDI)\") + #base plot\n geom_area(\n   aes(group = consecutive_id((Reference - MEDI) >=0 ),\n       fill = (Reference - MEDI) >=0,\n       col = (Reference - MEDI) >=0\n       ), outline.type = \"upper\", alpha = 0.25, size = 0.25\n )+\n  guides(fill = \"none\", col = \"none\") +\n  time_scale +\n  geom_hline(aes(yintercept = 0), lty = 2, col = \"red\") + \n    scale_fill_manual(values = c(\"#EFC000\", \"#0073C2\")) + \n    scale_color_manual(values = c(\"#EFC000\", \"#0073C2\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nScale for x is already present.\nAdding another scale for x, which will replace the existing scale.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nScale for colour is already present.\nAdding another scale for colour, which will replace the existing scale.\n```\n\n\n:::\n\n```{.r .cell-code}\nPlot_E\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/vis E-1.png){width=672}\n:::\n:::\n\n\n\n\n#### Visualization F\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nPlot_F <-\ndataset.LL.partial %>% \n   gg_day(facetting = FALSE, geom = \"blank\", \n                    x.axis.label = \"Local Time (HH:MM)\",\n          y.axis.label = \"Daylight - Participant (lx, mel EDI)\") + #base plot\n geom_ribbon(\n   aes(\n     ymin = 0, ymax = abs(Reference - MEDI),\n     group = consecutive_id((Reference - MEDI) >=0 ),\n       fill = (Reference - MEDI) >=0,\n       col = (Reference - MEDI) >=0\n       ), outline.type = \"upper\", alpha = 0.25, size = 0.25\n )+\n  guides(fill = \"none\", col = \"none\") +\n  time_scale +\n  geom_hline(aes(yintercept = 0), lty = 2, col = \"red\") + \n    scale_fill_manual(values = c(\"#EFC000\", \"#0073C2\")) + \n    scale_color_manual(values = c(\"#EFC000\", \"#0073C2\")) +\n    scale_y_log10(breaks = 10^(-5:5), labels = \\(x) label_parsed(paste0(\"10^\",log10(x))))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nScale for x is already present.\nAdding another scale for x, which will replace the existing scale.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nScale for colour is already present.\nAdding another scale for colour, which will replace the existing scale.\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n```\n\n\n:::\n\n```{.r .cell-code}\nPlot_F\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in scale_y_log10(breaks = 10^(-5:5), labels = function(x) label_parsed(paste0(\"10^\", : log-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/vis F-1.png){width=672}\n:::\n:::\n\n\n\n\n#### Visualization G\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nPlot_G <-\ndataset.LL.partial %>% \n  mutate(MEDI = ifelse(Reference-MEDI == 0, NA, MEDI)) %>% \n   gg_day(facetting = FALSE, geom = \"blank\", \n                    x.axis.label = \"Local Time (HH:MM)\",\n          y.axis.label = \"Daylight - Participant (lx, mel EDI)\") + #base plot\n geom_ribbon(\n   aes(\n     ymin = min(abs(Reference-MEDI), na.rm = TRUE), ymax = abs(Reference - MEDI),\n     group = consecutive_id((Reference - MEDI) >=0 ),\n       fill = (Reference - MEDI) >=0,\n       col = (Reference - MEDI) >=0\n       ), outline.type = \"upper\", alpha = 0.25, size = 0.25\n )+\n  guides(fill = \"none\", col = \"none\") +\n  time_scale +\n  geom_hline(aes(yintercept = 10^-4), lty = 2, col = \"red\") + \n    scale_fill_manual(values = c(\"#EFC000\", \"#0073C2\")) + \n    scale_color_manual(values = c(\"#EFC000\", \"#0073C2\")) +\n  scale_y_log10(breaks = 10^(-5:5), \n                labels = \\(x) label_parsed(ifelse(x == 10^-4, \"0\", paste0(\"10^\",log10(x))))\n                ) +\n  geom_point(\n    data = \\(x) x %>% filter(is.na(MEDI)) %>% mutate(MEDI = 10^-4), \n    aes(y = MEDI), col = \"grey\", size = 1, alpha = 0.5)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nScale for x is already present.\nAdding another scale for x, which will replace the existing scale.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nScale for colour is already present.\nAdding another scale for colour, which will replace the existing scale.\nScale for y is already present.\nAdding another scale for y, which will replace the existing scale.\n```\n\n\n:::\n\n```{.r .cell-code}\nPlot_G\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in scale_y_log10(breaks = 10^(-5:5), labels = function(x) label_parsed(ifelse(x == : log-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/vis G-1.png){width=672}\n:::\n:::\n\n\n\n\n#### Visualization H\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nPlot_H <-\ndataset.LL.partial %>% \n   gg_day(y.axis = Reference - MEDI, facetting = FALSE, geom = \"blank\", \n                    x.axis.label = \"Local Time (HH:MM)\",\n          y.axis.label = \"Daylight - Participant (lx, mel EDI)\") + #base plot\n geom_area(\n   aes(group = consecutive_id((Reference - MEDI) >=0 ),\n       fill = (Reference - MEDI) >=0,\n       col = (Reference - MEDI) >=0\n       ), outline.type = \"upper\", alpha = 0.25, size = 0.25\n )+\n  guides(fill = \"none\", col = \"none\") +\n  time_scale +\n  geom_hline(aes(yintercept = 0), lty = 2, col = \"red\") + \n    scale_fill_manual(values = c(\"#EFC000\", \"#0073C2\")) + \n    scale_color_manual(values = c(\"#EFC000\", \"#0073C2\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nScale for x is already present.\nAdding another scale for x, which will replace the existing scale.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nScale for colour is already present.\nAdding another scale for colour, which will replace the existing scale.\n```\n\n\n:::\n\n```{.r .cell-code}\nPlot_H\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/vis H-1.png){width=672}\n:::\n:::\n\n\n\n\n#### Combined Visualization\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDifferences <- \nPlot_E + plot_spacer() + Plot_F + plot_spacer() + Plot_G + plot_spacer() + Plot_H + \n  plot_layout(ncol = 7, nrow = 1, axes = \"collect\",\n              widths = c(1,-0.15,1,-0.15,1,-0.15,1)) + \n  plot_annotation(tag_levels = \"A\") & \n  theme(\n    plot.tag.position = c(0, 1),\n        plot.tag.location = \"plot\",\n        plot.tag = element_text(size = 15, hjust = 0, vjust =-0.75),\n        axis.text = element_text(size = 13),\n        axis.title = element_text(size = 16)\n        ) +\n  theme(plot.margin = margin(15,10,5,5))\n\nggsave(\"figures/Figure_3.pdf\", Differences, width = 17.5, height = 5.5, units = \"cm\", scale = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in scale_y_log10(breaks = 10^(-5:5), labels = function(x) label_parsed(paste0(\"10^\", : log-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in scale_y_log10(breaks = 10^(-5:5), labels = function(x) label_parsed(ifelse(x == : log-10 transformation introduced infinite values.\nlog-10 transformation introduced infinite values.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n```\n\n\n:::\n:::\n\n\n\n\n## Modelling\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#setting the ends for the cyclic smooth\nknots_day <- list(time = c(0, 24*3600))\n\nmodel_data <- \ndataset.LL.partial %>% \n  ungroup() %>% \n  rename(Environment = Reference) %>% \n  pivot_longer(names_to = \"type\", cols = c(MEDI, Environment)) %>%  \n  arrange(type) %>% \n  mutate(time = hms::as_hms(Datetime) %>% as.numeric(),\n         time = c(time[-n()], 24*3600),\n         type = factor(type),\n         start.event = time == 0,\n         input_m1 = \n           case_when(\n             value == 0 ~ NA,\n             .default = value),\n         input_m2 = value + .Machine$double.eps,\n         input_m3 = value + 0.1,\n         input_m4 = value,\n         .by = type\n  )\n```\n:::\n\n\n\n\n\n### Model type 1: 0 to NA\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npattern_formula <- log10(input_m1) ~ type + s(time, by = type, bs = \"cc\", k = 24)\n\nmodel_data_m1 <- \n  model_data %>% \n  group_by(type, case = is.na(input_m1)) %>% \n  mutate(start.event = \n                        c(TRUE, rep(FALSE, n() -1)))\n\nmodel_1 <- bam(formula = pattern_formula, \n             data = model_data_m1, \n             method = \"REML\", \n             knots = knots_day)\n\nr1 <- start_value_rho(model_1, plot=TRUE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nmodel_1 <- bam(formula = pattern_formula, \n             data = model_data_m1, \n             method = \"REML\", \n             knots = knots_day, \n             rho = r1,\n             AR.start = model_data_m1$start.event\n              )\n\nacf_resid(model_1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n\n```{.r .cell-code}\nsummary(model_1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nFamily: gaussian \nLink function: identity \n\nFormula:\nlog10(input_m1) ~ type + s(time, by = type, bs = \"cc\", k = 24)\n\nParametric coefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  3.37020    0.09289   36.28   <2e-16 ***\ntypeMEDI    -1.81237    0.10998  -16.48   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nApproximate significance of smooth terms:\n                          edf Ref.df     F p-value    \ns(time):typeEnvironment 14.45     22 43.18  <2e-16 ***\ns(time):typeMEDI        18.49     22 42.94  <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nR-sq.(adj) =  0.949   Deviance explained = 95.3%\n-REML = 189.85  Scale est. = 0.12884   n = 371\n```\n\n\n:::\n\n```{.r .cell-code}\ngam.check(model_1, rep = 500)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nMethod: REML   Optimizer: outer newton\nfull convergence after 6 iterations.\nGradient range [-4.288836e-10,2.338929e-11]\n(score 189.8507 & scale 0.1288363).\nHessian positive definite, eigenvalue range [2.029136,185.2563].\nModel rank =  46 / 46 \n\nBasis dimension (k) checking results. Low p-value (k-index<1) may\nindicate that k is too low, especially if edf is close to k'.\n\n                          k'  edf k-index p-value   \ns(time):typeEnvironment 22.0 14.5    0.87   0.010 **\ns(time):typeMEDI        22.0 18.5    0.87   0.005 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\nestimate_m1 <- \nplot_smooth(model_1, \n            view = \"time\", \n            plot_all = \"type\",\n            # rug = F,\n            n.grid = 12*24+1,\n            rm.ranef = FALSE,\n            se = 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSummary:\n\t* type : factor; set to the value(s): Environment, MEDI. \n\t* time : numeric predictor; with 289 values ranging from 0.000000 to 86400.000000. \n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-4.png){width=672}\n:::\n\n```{.r .cell-code}\nestimate_m1_dif <- \nplot_diff(model_1,\n          view = \"time\",\n          comp = list(type = c(\"Environment\", \"MEDI\")),\n          rm.ranef = FALSE,\n          n.grid = 12*24+1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSummary:\n\t* time : numeric predictor; with 289 values ranging from 21300.000000 to 82800.000000. \n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-5.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\ntime window(s) of significant difference(s):\n\t21300.000000 - 72977.083333\n\t73831.250000 - 82800.000000\n```\n\n\n:::\n\n```{.r .cell-code}\nestimate_m1$fv %>% \n  ggplot(aes(x = time, y = 10^fit, col = type)) +\n  geom_line() +\n  theme_minimal() +\n  scale_x_time(limits = c(0, 24*60*60), expand = c(0,0),\n               breaks = c(0, 6, 12, 18, 24)*60*60, \n               labels = scales::label_time(format = \"%H:%M\")\n               ) +\n  scale_y_continuous(transform = \"symlog\", breaks = c(0, 10^(0:5))) +\n  geom_point(data = model_data, aes(y = value, col = type))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-6.png){width=672}\n:::\n\n```{.r .cell-code}\nmodel_data <- \nmodel_data %>% \n  left_join(estimate_m1$fv, by = c(\"type\", \"time\")) %>% \n  rename(fit_m1 = fit) %>% \n  mutate(fit_m1 = (10^(fit_m1)))\n```\n:::\n\n\n\n\n### Model type 2: adding smallest float to every value\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npattern_formula <- log10(input_m2) ~ type + s(time, by = type, bs = \"cc\", k = 24)\n\nmodel_2 <- bam(formula = pattern_formula, \n             data = model_data, \n             method = \"REML\", \n             knots = knots_day)\n\nr1 <- start_value_rho(model_2, plot=TRUE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nmodel_2 <- bam(formula = pattern_formula, \n             data = model_data, \n             method = \"REML\", \n             knots = knots_day, \n             rho = r1,\n             AR.start = model_data$start.event\n              )\n\nacf_resid(model_2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n\n```{.r .cell-code}\nsummary(model_2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nFamily: gaussian \nLink function: identity \n\nFormula:\nlog10(input_m2) ~ type + s(time, by = type, bs = \"cc\", k = 24)\n\nParametric coefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  -3.4604     0.2267 -15.262   <2e-16 ***\ntypeMEDI     -0.6504     0.3206  -2.029    0.043 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nApproximate significance of smooth terms:\n                          edf Ref.df     F p-value    \ns(time):typeEnvironment 16.83     22 79.67  <2e-16 ***\ns(time):typeMEDI        15.60     22 59.99  <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nR-sq.(adj) =  0.964   Deviance explained = 96.6%\n-REML = 949.28  Scale est. = 2.5616    n = 578\n```\n\n\n:::\n\n```{.r .cell-code}\ngam.check(model_2, rep = 500)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nMethod: REML   Optimizer: outer newton\nfull convergence after 5 iterations.\nGradient range [-2.069517e-07,5.04231e-09]\n(score 949.2801 & scale 2.561581).\nHessian positive definite, eigenvalue range [4.66738,288.4646].\nModel rank =  46 / 46 \n\nBasis dimension (k) checking results. Low p-value (k-index<1) may\nindicate that k is too low, especially if edf is close to k'.\n\n                          k'  edf k-index p-value\ns(time):typeEnvironment 22.0 16.8    0.99    0.42\ns(time):typeMEDI        22.0 15.6    0.99    0.41\n```\n\n\n:::\n\n```{.r .cell-code}\nestimate_m2 <- \nplot_smooth(model_2, \n            view = \"time\", \n            plot_all = \"type\",\n            # rug = F,\n            n.grid = 12*24+1,\n            rm.ranef = FALSE,\n            se = 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSummary:\n\t* type : factor; set to the value(s): Environment, MEDI. \n\t* time : numeric predictor; with 289 values ranging from 0.000000 to 86400.000000. \n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-4.png){width=672}\n:::\n\n```{.r .cell-code}\nestimate_m2_dif <- \nplot_diff(model_2,\n          view = \"time\",\n          comp = list(type = c(\"Environment\", \"MEDI\")),\n          rm.ranef = FALSE,\n          n.grid = 12*24+1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSummary:\n\t* time : numeric predictor; with 289 values ranging from 0.000000 to 86400.000000. \n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-5.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\ntime window(s) of significant difference(s):\n\t19500.000000 - 39900.000000\n\t47100.000000 - 55200.000000\n\t69300.000000 - 70500.000000\n\t73500.000000 - 84900.000000\n```\n\n\n:::\n\n```{.r .cell-code}\nestimate_m2$fv %>% \n  ggplot(aes(x = time, y = (10^fit)-.Machine$double.eps, col = type)) +\n  geom_line() +\n  theme_minimal() +\n  scale_x_time(limits = c(0, 24*60*60), expand = c(0,0),\n               breaks = c(0, 6, 12, 18, 24)*60*60, \n               labels = scales::label_time(format = \"%H:%M\")\n               ) +\n  scale_y_continuous(transform = \"symlog\", breaks = c(0, 10^(0:5))) +\n  geom_point(data = model_data, aes(y = value, col = type))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-6.png){width=672}\n:::\n\n```{.r .cell-code}\nmodel_data <- \nmodel_data %>% \n  left_join(estimate_m2$fv, by = c(\"type\", \"time\")) %>% \n  rename(fit_m2 = fit) %>% \n  mutate(fit_m2 = (10^(fit_m2)) - .Machine$double.eps)\n```\n:::\n\n\n\n### Model type 3: adding -1 log10 to every value\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npattern_formula <- log10(input_m3) ~ type + s(time, by = type, bs = \"cc\", k = 24)\n\nmodel_3 <- bam(formula = pattern_formula, \n             data = model_data, \n             method = \"REML\", \n             knots = knots_day)\n\nr1 <- start_value_rho(model_3, plot=TRUE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\nmodel_3 <- bam(formula = pattern_formula,\n             data = model_data,\n             method = \"REML\",\n             knots = knots_day,\n             rho = r1,\n             AR.start = model_data$start.event\n              )\n\nacf_resid(model_3)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n\n```{.r .cell-code}\nsummary(model_3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nFamily: gaussian \nLink function: identity \n\nFormula:\nlog10(input_m3) ~ type + s(time, by = type, bs = \"cc\", k = 24)\n\nParametric coefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  2.06937    0.03919   52.80   <2e-16 ***\ntypeMEDI    -1.19000    0.05542  -21.47   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nApproximate significance of smooth terms:\n                          edf Ref.df      F p-value    \ns(time):typeEnvironment 17.62     22 194.49  <2e-16 ***\ns(time):typeMEDI        14.48     22  75.97  <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nR-sq.(adj) =  0.981   Deviance explained = 98.2%\n-REML = 21.691  Scale est. = 0.090725  n = 578\n```\n\n\n:::\n\n```{.r .cell-code}\ngam.check(model_3, rep = 500)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nMethod: REML   Optimizer: outer newton\nfull convergence after 5 iterations.\nGradient range [-1.933665e-07,3.07114e-09]\n(score 21.69085 & scale 0.09072546).\nHessian positive definite, eigenvalue range [5.504781,288.4603].\nModel rank =  46 / 46 \n\nBasis dimension (k) checking results. Low p-value (k-index<1) may\nindicate that k is too low, especially if edf is close to k'.\n\n                          k'  edf k-index p-value\ns(time):typeEnvironment 22.0 17.6     1.1    0.98\ns(time):typeMEDI        22.0 14.5     1.1    1.00\n```\n\n\n:::\n\n```{.r .cell-code}\nestimate_m3 <- \nplot_smooth(model_3, \n            view = \"time\", \n            plot_all = \"type\",\n            # rug = F,\n            n.grid = 12*24+1,\n            rm.ranef = FALSE,\n            se = 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSummary:\n\t* type : factor; set to the value(s): Environment, MEDI. \n\t* time : numeric predictor; with 289 values ranging from 0.000000 to 86400.000000. \n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-4.png){width=672}\n:::\n\n```{.r .cell-code}\nestimate_m3_dif <- \nplot_diff(model_3,\n          view = \"time\",\n          comp = list(type = c(\"Environment\", \"MEDI\")),\n          rm.ranef = FALSE,\n          n.grid = 12*24+1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSummary:\n\t* time : numeric predictor; with 289 values ranging from 0.000000 to 86400.000000. \n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-5.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\ntime window(s) of significant difference(s):\n\t20100.000000 - 72900.000000\n\t74100.000000 - 84600.000000\n```\n\n\n:::\n\n```{.r .cell-code}\nestimate_m3$fv %>% \n  ggplot(aes(x = time, y = (10^fit)-0.1, col = type)) +\n  geom_line() +\n  theme_minimal() +\n  scale_x_time(limits = c(0, 24*60*60), expand = c(0,0),\n               breaks = c(0, 6, 12, 18, 24)*60*60, \n               labels = scales::label_time(format = \"%H:%M\")\n               ) +\n  scale_y_continuous(transform = \"symlog\", breaks = c(0, 10^(0:5))) +\n  geom_point(data = model_data, aes(y = value, col = type))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-6.png){width=672}\n:::\n\n```{.r .cell-code}\nmodel_data <- \nmodel_data %>% \n  left_join(estimate_m3$fv, by = c(\"type\", \"time\")) %>% \n  rename(fit_m3 = fit) %>% \n  mutate(fit_m3 = (10^(fit_m3))-0.1)\n```\n:::\n\n\n\n\n### Model type 4: using the Tweedy family\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npattern_formula <- input_m4 ~ type + s(time, by = type, bs = \"cc\", k = 24)\n\nmodel_4 <- gam(formula = pattern_formula, \n             data = model_data, \n             method = \"REML\", \n             family = tw,\n             knots = knots_day)\n\nsummary(model_4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nFamily: Tweedie(p=1.726) \nLink function: log \n\nFormula:\ninput_m4 ~ type + s(time, by = type, bs = \"cc\", k = 24)\n\nParametric coefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept)   -4.654      1.704  -2.732  0.00651 **\ntypeMEDI      -0.247      2.173  -0.114  0.90957   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nApproximate significance of smooth terms:\n                          edf Ref.df     F p-value    \ns(time):typeEnvironment 15.66     22 119.3  <2e-16 ***\ns(time):typeMEDI        16.61     22 114.7  <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nR-sq.(adj) =  0.917   Deviance explained = 97.8%\n-REML = 2895.9  Scale est. = 2.0844    n = 578\n```\n\n\n:::\n\n```{.r .cell-code}\ngam.check(model_4, rep = 500)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nMethod: REML   Optimizer: outer newton\nfull convergence after 5 iterations.\nGradient range [-0.005965489,0.0009400968]\n(score 2895.865 & scale 2.084384).\nHessian positive definite, eigenvalue range [2.112661,585.8741].\nModel rank =  46 / 46 \n\nBasis dimension (k) checking results. Low p-value (k-index<1) may\nindicate that k is too low, especially if edf is close to k'.\n\n                          k'  edf k-index p-value\ns(time):typeEnvironment 22.0 15.7    1.12       1\ns(time):typeMEDI        22.0 16.6    1.12       1\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(model_4)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-3.png){width=672}\n:::\n\n```{.r .cell-code}\nestimate_m4 <- \nplot_smooth(model_4, \n            view = \"time\", \n            plot_all = \"type\",\n            # rug = F,\n            n.grid = 12*24+1,\n            rm.ranef = FALSE,\n            se = 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSummary:\n\t* type : factor; set to the value(s): Environment, MEDI. \n\t* time : numeric predictor; with 289 values ranging from 0.000000 to 86400.000000. \n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-4.png){width=672}\n:::\n\n```{.r .cell-code}\nestimate_m4_dif <- \nplot_diff(model_4,\n          view = \"time\",\n          comp = list(type = c(\"Environment\", \"MEDI\")),\n          rm.ranef = FALSE,\n          n.grid = 12*24+1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSummary:\n\t* time : numeric predictor; with 289 values ranging from 0.000000 to 86400.000000. \n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-5.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\ntime window(s) of significant difference(s):\n\t0.000000 - 1500.000000\n\t18300.000000 - 73200.000000\n\t74100.000000 - 86400.000000\n```\n\n\n:::\n\n```{.r .cell-code}\nestimate_m4$fv %>% \n  ggplot(aes(x = time, y = exp(fit), col = type)) +\n  geom_line() +\n  theme_minimal() +\n  scale_x_time(limits = c(0, 24*60*60), expand = c(0,0),\n               breaks = c(0, 6, 12, 18, 24)*60*60, \n               labels = scales::label_time(format = \"%H:%M\")\n               ) +\n  scale_y_continuous(transform = \"symlog\", breaks = c(0, 10^(0:5))) +\n  geom_point(data = model_data, aes(y = value, col = type))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-6.png){width=672}\n:::\n\n```{.r .cell-code}\nmodel_data <- \nmodel_data %>% \n  left_join(estimate_m4$fv, by = c(\"type\", \"time\")) %>% \n  rename(fit_m4 = fit) %>% \n  mutate(fit_m4 = exp(fit_m4))\n```\n:::\n\n\n\n\n### Combined Models\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#adding scaled.pearson residuals\nmodel_data$resid_m1 <- NA\nmodel_data$resid_m1[!is.na(model_data$input_m1)] <- \n  (residuals(model_1, type = \"scaled.pearson\"))\nmodel_data$resid_m2 <-(residuals(model_2, type = \"scaled.pearson\"))\nmodel_data$resid_m3 <- (residuals(model_3, type = \"scaled.pearson\"))\nmodel_data$resid_m4 <- (residuals(model_4, type = \"scaled.pearson\"))\n\nmodel_data_long <- \nmodel_data %>% \n  pivot_longer(cols = input_m1:resid_m4, names_to = c(\".value\", \"model\"), \n               names_pattern = \"(.*)_(m\\\\d{1})\") %>% \n  mutate(model = model %>% str_replace(pattern = \"m\", replacement =  \"Model \"))\n\n\nsummary(model_1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nFamily: gaussian \nLink function: identity \n\nFormula:\nlog10(input_m1) ~ type + s(time, by = type, bs = \"cc\", k = 24)\n\nParametric coefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  3.37020    0.09289   36.28   <2e-16 ***\ntypeMEDI    -1.81237    0.10998  -16.48   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nApproximate significance of smooth terms:\n                          edf Ref.df     F p-value    \ns(time):typeEnvironment 14.45     22 43.18  <2e-16 ***\ns(time):typeMEDI        18.49     22 42.94  <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nR-sq.(adj) =  0.949   Deviance explained = 95.3%\n-REML = 189.85  Scale est. = 0.12884   n = 371\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(model_2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nFamily: gaussian \nLink function: identity \n\nFormula:\nlog10(input_m2) ~ type + s(time, by = type, bs = \"cc\", k = 24)\n\nParametric coefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  -3.4604     0.2267 -15.262   <2e-16 ***\ntypeMEDI     -0.6504     0.3206  -2.029    0.043 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nApproximate significance of smooth terms:\n                          edf Ref.df     F p-value    \ns(time):typeEnvironment 16.83     22 79.67  <2e-16 ***\ns(time):typeMEDI        15.60     22 59.99  <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nR-sq.(adj) =  0.964   Deviance explained = 96.6%\n-REML = 949.28  Scale est. = 2.5616    n = 578\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(model_3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nFamily: gaussian \nLink function: identity \n\nFormula:\nlog10(input_m3) ~ type + s(time, by = type, bs = \"cc\", k = 24)\n\nParametric coefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  2.06937    0.03919   52.80   <2e-16 ***\ntypeMEDI    -1.19000    0.05542  -21.47   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nApproximate significance of smooth terms:\n                          edf Ref.df      F p-value    \ns(time):typeEnvironment 17.62     22 194.49  <2e-16 ***\ns(time):typeMEDI        14.48     22  75.97  <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nR-sq.(adj) =  0.981   Deviance explained = 98.2%\n-REML = 21.691  Scale est. = 0.090725  n = 578\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(model_4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nFamily: Tweedie(p=1.726) \nLink function: log \n\nFormula:\ninput_m4 ~ type + s(time, by = type, bs = \"cc\", k = 24)\n\nParametric coefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept)   -4.654      1.704  -2.732  0.00651 **\ntypeMEDI      -0.247      2.173  -0.114  0.90957   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nApproximate significance of smooth terms:\n                          edf Ref.df     F p-value    \ns(time):typeEnvironment 15.66     22 119.3  <2e-16 ***\ns(time):typeMEDI        16.61     22 114.7  <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nR-sq.(adj) =  0.917   Deviance explained = 97.8%\n-REML = 2895.9  Scale est. = 2.0844    n = 578\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#model fitted plot\nModel_fitted_plot <- \nmodel_data_long %>%\n  ggplot(aes(x = time, y = value, group = type, col = type)) +\n  geom_point(size = 0.5) +\n  geom_line(aes(y = fit), col = \"black\") +\n  facet_wrap(~model, ncol = 4) + \n  # geom_line(col = \"red\") +\n  # geom_line(aes(y = fit_m2), col = \"skyblue3\") +\n  # geom_line(aes(y = fit_m3), col = \"limegreen\") +\n  # geom_line(aes(y = fit_m4), col = \"orange2\") +\n  theme_cowplot() +\n  scale_x_time(limits = c(0, 24*60*60), expand = c(0,0),\n               breaks = c(0, 6, 12, 18, 24)*60*60, \n               labels = scales::label_time(format = \"%H:%M\")\n               ) +\n  scale_y_continuous(transform = \"symlog\", breaks = c(0, 10^(0:5)),\n                     labels = c(\"0\", \"1\", \"10\", \"100\", \"1 000\", \"10 000\", \"100 000\")) +\n  scale_color_jco() +\n  guides(color = \"none\") +\n  labs(y = \"Melanopic illuminance\\n(lx, mel EDI)\",\n       x = NULL) +\n  theme(\n        strip.text = element_text(size = 14)\n  )\n \n\nModel_residual_plot <- \nmodel_data_long %>%   \nggplot(aes(x=time))+\n  geom_point(aes(y=resid), size = 0.5) +\n  facet_wrap(~model, ncol = 4) +\n  theme_cowplot() +\n  coord_cartesian(ylim = c(-5,5)) +\n  time_scale +\n  labs(y = \"Scaled Pearson\\nresiduals\", x = \"Local time (HH:MM)\") +\n  theme(strip.background = element_blank(),\n        strip.text = element_blank())\n\nModel_fitted_plot / Model_residual_plot + \n  plot_layout(guides = \"collect\", heights = c(3,2)) +\n  plot_annotation(tag_levels = \"A\") &\n  theme(\n    plot.tag.position = c(0, 0.99),\n    plot.tag = element_text(size = 15, hjust = 0.5, vjust = 0, face = \"bold\"),\n    panel.spacing = unit(2.5, \"lines\"),\n        plot.tag.location = \"plot\",\n        axis.text = element_text(size = 13),\n        axis.title = element_text(size = 16)\n        ) +\n  theme(plot.margin = margin(15,10,5,5))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 207 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/combining models2-1.png){width=1152}\n:::\n\n```{.r .cell-code}\n  ggsave(\"figures/Figure_4.pdf\", width = 17.5, height = 8, units = \"cm\", scale = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 207 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nModel_zoom1 <- \nmodel_data_long %>%\n  ggplot(aes(x = time, y = value, group = type, col = type)) +\n  geom_point(size = 1.5) +\n  geom_line(aes(y = fit)) +\n  facet_wrap(~model, ncol = 4) + \n  # geom_line(col = \"red\") +\n  # geom_line(aes(y = fit_m2), col = \"skyblue3\") +\n  # geom_line(aes(y = fit_m3), col = \"limegreen\") +\n  # geom_line(aes(y = fit_m4), col = \"orange2\") +\n  theme_cowplot() +\n  scale_x_time(limits = c(0, 24*60*60), expand = c(0,0),\n               breaks = c(0, 3, 6, 9, 12, 15, 18, 21, 24)*60*60, \n               labels = scales::label_time(format = \"%H:%M\")\n               ) +\n  scale_y_continuous(transform = \"symlog\", breaks = c(0, 10^(0:5)),\n                     labels = c(\"0\", \"1\", \"10\", \"100\", \"1 000\", \"10 000\", \"100 000\")) +\n  scale_color_jco() +\n  guides(color = \"none\", linetype = guide_legend(\"Model\")) +\n  labs(y = \"Melanopic illuminance (lx, mel EDI)\",\n       x = NULL) + aes(group = interaction(type, model), linetype = model, col = type) + \n  facet_zoom(xlim = c(5.5,10)*3600) +\n  scale_linetype_manual(values = 1:4)\n\nModel_zoom2 <- \nmodel_data_long %>%\n  ggplot(aes(x = time, y = value, group = type, col = type)) +\n  geom_point(size = 1.5) +\n  geom_line(aes(y = fit)) +\n  facet_wrap(~model, ncol = 4) + \n  # geom_line(col = \"red\") +\n  # geom_line(aes(y = fit_m2), col = \"skyblue3\") +\n  # geom_line(aes(y = fit_m3), col = \"limegreen\") +\n  # geom_line(aes(y = fit_m4), col = \"orange2\") +\n  theme_cowplot() +\n  scale_x_time(limits = c(0, 24*60*60), expand = c(0,0),\n               breaks = c(0, 3, 6, 9, 12, 15, 18, 21, 24)*60*60, \n               labels = scales::label_time(format = \"%H:%M\")\n               ) +\n  scale_y_continuous(transform = \"symlog\", breaks = c(0, 10^(0:5)),\n                     labels = c(\"0\", \"1\", \"10\", \"100\", \"1 000\", \"10 000\", \"100 000\")) +\n  scale_color_jco() +\n  guides(color = \"none\", linetype = guide_legend(\"Model\")) +\n  labs(y = \"Melanopic illuminance (lx, mel EDI)\",\n       x = NULL) + aes(group = interaction(type, model), linetype = model, col = type) + \n  facet_zoom(xlim = c(18,23.5)*3600) +\n  scale_linetype_manual(values = 1:4)\n\nModel_zoom1 + guide_area() + Model_zoom2 + \n  plot_layout(guides = \"collect\", axes = \"collect\", widths = c(1, 0.15, 1)) &\n  theme(plot.margin = margin(5,10,5,5),\n                axis.text = element_text(size = 13),\n        axis.title = element_text(size = 16),\n        legend.text = element_text(size = 13)\n        )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/combining models3-1.png){width=1056}\n:::\n\n```{.r .cell-code}\nggsave(\"figures/Figure_5.pdf\", width = 17.5, height = 8, units = \"cm\", scale = 2)\n```\n:::\n\n\n\n\n### Tweedie distribution\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)  # For reproducibility\nmu <- 5     # Mean\nphi <- 1.5       # Dispersion\np <- 1.5   # Power parameter (Compound Poisson-Gamma)\n\n# Generate random Tweedie values\ntweedie_samples <- rtweedie(n = 100000, mu = mu, phi = phi, power = p)\ntweedie_samples2 <- rtweedie(n = 100000, mu = mu, phi = phi, power = 2)\ntweedie_samples3 <- rpois(n = 100000, lambda = mu)\nnorm_samples <- rnorm(n = 100000, mean = mu, sd = 3)\nnbin_samples <- rnbinom(100000, size = phi, mu = mu)\nzero_inflated <- rbinom(100000, 1, 0.07)\nnbin_samples <- ifelse(zero_inflated == 1, 0, nbin_samples)\nzip_samples <- ifelse(zero_inflated == 1, 0, tweedie_samples3)\n\n# Plot histogram\nhist(tweedie_samples, breaks = 50, col = \"lightblue\", main = \"Compound Poisson-Gamma\", xlab = \"Values\", probability = TRUE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\nhist(tweedie_samples2, breaks = 50, col = \"lightblue\", main = \"Gamma\", xlab = \"Values\", probability = TRUE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n\n```{.r .cell-code}\nhist(tweedie_samples3, breaks = 50, col = \"lightblue\", main = \"Poisson\", xlab = \"Values\", probability = TRUE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-3.png){width=672}\n:::\n\n```{.r .cell-code}\nhist(norm_samples, breaks = 50, col = \"lightblue\", main = \"Gaussian\", xlab = \"Values\", probability = TRUE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-4.png){width=672}\n:::\n\n```{.r .cell-code}\nhist(nbin_samples, breaks = 50, col = \"lightblue\", main = \"nbin\", xlab = \"Values\", probability = TRUE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-5.png){width=672}\n:::\n\n```{.r .cell-code}\nhist(zip_samples, breaks = 50, col = \"lightblue\", main = \"nbin\", xlab = \"Values\", probability = TRUE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-6.png){width=672}\n:::\n\n```{.r .cell-code}\nrdata <- \nlist(Tweedie = tweedie_samples, `Zero-Inflated Negative Binomial` = nbin_samples, `Zero-Inflated Poisson` = zip_samples, Gaussian = norm_samples)\n\nrdata <- \nrdata |> map(enframe) |> list_rbind(names_to = \"Distribution\")\n\n\nparameters <- \n  tibble(Distribution = c(\"Gaussian\", \"Tweedie\", \"Zero-Inflated Negative Binomial\", \"Zero-Inflated Poisson\"),\n         text = c(\"\\u03BC = 5\\n\\u03c3=3\",\n                  \"\\u03BC = 5\\n\\u03A6=1.5\\np=1.5\",\n                  \"\\u03bb = 5\\n\\u03A6=1.5\\n\\u03C0=0.07\",\n                  \"\\u03bb = 5\\n\\u03C0=0.07\"\n                  ),\n         y = c(0.15, 0.17, 0.34, 0.32))\n\np1 <- \nrdata |> \n  mutate(Distribution = factor(Distribution, levels = unique(Distribution))) |> \n  ggplot(aes(x = value, y = after_stat(density))) + \n  geom_histogram(binwidth = 0.5) + \n  facet_wrap(~ Distribution, scales = \"free\") +\n  theme_cowplot() + \n  coord_cartesian(xlim = c(0,20)) +\n  labs(y = \"Density\", x = \"Value\") +\n  geom_text(inherit.aes = FALSE, data = parameters, aes(x=20, y = y, label = text), hjust = 1, vjust = 1)\n\np1\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-7.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoordinates <- c(48.521637, 9.057645)\n\np2 <-\ndataset.LL |>\n  pivot_longer(c(MEDI, Reference)) |> \n  add_photoperiod(coordinates) |> \n  mutate(name = case_match(name,\n    \"MEDI\" ~ \"Participant\",\n    \"Reference\" ~ \"Environment\"\n  ),\n  photoperiod.state = factor(photoperiod.state, levels = c(\"day\", \"night\"), labels = c(\"Daytime\", \"Nighttime\"))) |> \n  # filter(photoperiod.state == \"night\") |>\n  ggplot(aes(x = value, y = after_stat(ncount), fill = name)) +\n  geom_histogram(binwidth = 0.2) +\n  scale_x_continuous(transform = \"symlog\",\n                     breaks = c(0,1,10, 100, 1000, 10000, 100000),\n                     labels= expression(0,10^0,10^1, 10^2, 10^3, 10^4, 10^5)\n                     ) +\n  # scale_alpha_manual(values = c(day = 1, night = 0.45)) +\n  facet_grid(photoperiod.state~name, scales = \"free\") +\n  scale_fill_manual(values = c(\"#0073C2FF\", \"#EFC000\")) +\n  labs(x = \"Melanopic illuminance (lx, mel EDI)\", y = \"Scaled counts (max = 1)\", alpha = \"Photoperiod state\") +\n  guides(fill = \"none\") +\n  theme_cowplot()\n  # theme(legend.position = \"inside\",\n  #       legend.position.inside = c(0.75,0.75),\n  #       legend.box.just = \"right\")\n\np1/p2 + plot_annotation(tag_levels = \"A\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 707 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=768}\n:::\n\n```{.r .cell-code}\nggsave(\"figures/Figure_1.tiff\", width = 8, height = 8, dpi = 200)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 707 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n:::\n\n\n\n\n\n## Session info\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.5.0 (2025-04-11)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS Sequoia 15.5\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Berlin\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices datasets  utils     methods   base     \n\nother attached packages:\n [1] ggforce_0.5.0     tweedie_2.3.5     cowplot_1.1.3     ggsci_3.2.0      \n [5] itsadug_2.4.1     plotfunctions_1.4 gt_1.0.0          patchwork_1.3.1  \n [9] mgcv_1.9-1        nlme_3.1-168      lubridate_1.9.4   forcats_1.0.0    \n[13] stringr_1.5.1     dplyr_1.1.4       purrr_1.0.4       readr_2.1.5      \n[17] tidyr_1.3.1       tibble_3.3.0      ggplot2_3.5.2     tidyverse_2.0.0  \n[21] LightLogR_0.9.2  \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6       xfun_0.52          htmlwidgets_1.6.4  lattice_0.22-6    \n [5] tzdb_0.5.0         vctrs_0.6.5        tools_4.5.0        generics_0.1.4    \n [9] parallel_4.5.0     proxy_0.4-27       pkgconfig_2.0.3    KernSmooth_2.23-26\n[13] Matrix_1.7-3       RColorBrewer_1.1-3 lifecycle_1.0.4    compiler_4.5.0    \n[17] farver_2.1.2       suntools_1.0.1     textshaping_1.0.1  janitor_2.2.1     \n[21] snakecase_0.11.1   class_7.3-23       htmltools_0.5.8.1  yaml_2.3.10       \n[25] pillar_1.10.2      crayon_1.5.3       MASS_7.3-65        classInt_0.4-11   \n[29] tidyselect_1.2.1   digest_0.6.37      stringi_1.8.7      sf_1.0-21         \n[33] labeling_0.4.3     splines_4.5.0      polyclip_1.10-7    fastmap_1.2.0     \n[37] grid_4.5.0         cli_3.6.5          magrittr_2.0.3     utf8_1.2.6        \n[41] e1071_1.7-16       withr_3.0.2        scales_1.4.0       bit64_4.6.0-1     \n[45] timechange_0.3.0   rmarkdown_2.29     ggtext_0.1.2       bit_4.6.0         \n[49] ragg_1.4.0         hms_1.1.3          evaluate_1.0.4     knitr_1.50        \n[53] rlang_1.1.6        Rcpp_1.0.14        gridtext_0.1.5     DBI_1.2.3         \n[57] glue_1.8.0         tweenr_2.0.3       xml2_1.3.8         renv_1.1.1        \n[61] rstudioapi_0.17.1  vroom_1.6.5        jsonlite_2.0.0     R6_2.6.1          \n[65] units_0.8-7        systemfonts_1.2.3 \n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}